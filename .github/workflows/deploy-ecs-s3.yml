name: Build and Deploy Angular App to EC2 via Docker

on:
  push:
    branches:
      - master

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1

    steps:
      - name: Capture start time
        run: echo "START_TIME=$(date +%s)" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_GLOBAL }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_GLOBAL }}
          aws-region: ${{ env.AWS_REGION }}
  
      - name: Authenticate with AWS ECR Public
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            public.ecr.aws/r5p8n8t0/cloudnotes/frontend:latest
            public.ecr.aws/r5p8n8t0/cloudnotes/frontend:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
            docker pull public.ecr.aws/r5p8n8t0/cloudnotes/frontend:${{ github.sha }}
            docker stop cloudnotes-frontend || true
            docker rm cloudnotes-frontend || true
            docker run -d --name cloudnotes-frontend -p 80:80 public.ecr.aws/r5p8n8t0/cloudnotes/frontend:${{ github.sha }}
      
  

      - name: Log and Update Deployment
        if: always()
        uses: ramaeondev/therama.dev/.github/actions/log-and-update-deployment@master
        with:
          start_time: ${{ env.START_TIME }}
          s3_bucket: ${{ secrets.S3_UPLOAD_BUCKET }}